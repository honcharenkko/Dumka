import { useState } from "react";
import axios from "axios";
import SmartCardMaterialPreview from "../../../components/preview_components/SmartCardMaterialPreview.jsx";
import { motion } from "framer-motion";
import {useLocation} from "react-router-dom";
import { useNavigate } from "react-router-dom";




export default function SmartCardForm() {
  const [isModalOpen, setIsModalOpen] = useState(false);
  const [modalData, setModalData] = useState(null); // –ü–æ—á–∞—Ç–∫–æ–≤–æ null

  const location = useLocation();
  const { source } = location.state || {};


const answerFormatTranslations = {
  "–û–ø–∏—Å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó": "description",
  "–Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó —Ç–∞ –≤–∫–∞–∑—ñ–≤–∫–∏": "instructions",
  "–ü–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è —Ç–∞ –∞–Ω–∞–ª—ñ–∑": "comparison",
  "–ü—ñ–¥—Å—É–º–∫–∏ —Ç–∞ –≤–∏—Å–Ω–æ–≤–∫–∏": "conclusions",
};


const detailLevelTranslations = {
  "–°—Ç–∏—Å–ª–∏–π": "brief",
  "–°–µ—Ä–µ–¥–Ω—ñ–π": "medium",
  "–†–æ–∑–≥–æ—Ä–Ω—É—Ç–∏–π": "detailed",
};


const speechStyles = {
  1: "–†–æ–∑–º–æ–≤–Ω–∏–π",     // –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞ –≤–µ—Ä—Å—ñ—è –¥–ª—è —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
  2: "–û—Ñ—ñ—Ü—ñ–π–Ω–∏–π",      // –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞ –≤–µ—Ä—Å—ñ—è –¥–ª—è —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
};
const speechStylesEnglish = {
  1: "conversational",  // –ê–Ω–≥–ª—ñ–π—Å—å–∫–∞ –≤–µ—Ä—Å—ñ—è –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
  2: "formal",          // –ê–Ω–≥–ª—ñ–π—Å—å–∫–∞ –≤–µ—Ä—Å—ñ—è –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
};
  const [formData, setFormData] = useState({
    topic: "",
    num_cards: 5,
    answer_format: "–û–ø–∏—Å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó",
    detail_level: "–°–µ—Ä–µ–¥–Ω—ñ–π",
    text_style: 2
  });

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData((prev) => ({
      ...prev,
      [name]: name === "text_style" ? parseInt(value) : value,
    }));
  };

  const sendGenData = () => {
    if (!formData.topic.trim()) {
      console.error("–¢–µ–º–∞ –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –ø–æ—Ä–æ–∂–Ω—å–æ—é");
      return;
    }

    setIsModalOpen(true);
    setModalData(null);

    // üí° –í–∏–∑–Ω–∞—á–∞—î–º–æ —Ä–æ—É—Ç –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –¥–∂–µ—Ä–µ–ª–∞
    let route = "/generate_cards"; // –¥–µ—Ñ–æ–ª—Ç
    if (source === "it_project_mgmt") {
      route = "/rag_flashcard";
    } else if (source === "general") {
      route = "/generate_cards";
    } else {
      console.warn("–ù–µ–≤—ñ–¥–æ–º–µ –¥–∂–µ—Ä–µ–ª–æ, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –¥–µ—Ñ–æ–ª—Ç–Ω–∏–π —Ä–æ—É—Ç");
    }

    console.log(formData)
    axios
      .post(`http://localhost:8000${route}`, {
        ...formData,
        answer_format: answerFormatTranslations[formData.answer_format] || formData.answer_format,
        detail_level: detailLevelTranslations[formData.detail_level] || formData.detail_level,
        text_style: speechStylesEnglish[formData.text_style],
      }, {
        withCredentials: true,
      })
      .then((res) => {
        console.log("–í—ñ–¥–ø–æ–≤—ñ–¥—å —Å–µ—Ä–≤–µ—Ä–∞:", res.data);

        setModalData(res.data);

        setFormData({
          topic: "",
          num_cards: 5,
          answer_format: "–û–ø–∏—Å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó",
          detail_level: "–°–µ—Ä–µ–¥–Ω—ñ–π",
          text_style: 2
        });
      })
      .catch((err) => {
        console.error("–ü–æ–º–∏–ª–∫–∞:", err);
        setModalData("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –¥–∞–Ω–∏—Ö");
      });
  };


  return (<motion.div
initial={{ opacity: 0, y: 20 }}
  animate={{ opacity: 1, y: 0 }}
  exit={{ opacity: 0, y: -20 }}
  transition={{ duration: 0.5 }}
  className="flex w-full max-w-[90%] h-full rounded-2xl justify-center items-center p-6 font-sans"
>

  <div className="bg-white rounded-2xl p-8 w-full max-w-sm shadow-lg border border-gray-100 ">
    <h2 className="text-4xl font-bold text-center pb-2 mb-6 border-b border-gray-300 text-gray-800">SMART - –ö–ê–†–¢–ö–ò</h2>

    {/* –¢–µ–º–∞ */}
    <div className="mb-5">
      <label className="block mb-2 font-semibold text-gray-700">–¢–µ–º–∞</label>
      <input
        type="text"
        name="topic"
        value={formData.topic}
        onChange={handleChange}
        placeholder="–í–≤–µ–¥—ñ—Ç—å —Ç–µ–º—É"
        className="w-full px-4 py-3 rounded-xl bg-base-100 shadow-[inset_2px_2px_8px_#cfe7d6,inset_-2px_-2px_8px_#ffffff] focus:outline-none"
      />
    </div>

    {/* –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–∞—Ä—Ç–æ–∫ */}
    <div className="mb-5">
      <label className="block mb-2 font-semibold text-gray-700">–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–∞—Ä—Ç–æ–∫: {formData.num_cards}</label>
      <input
        type="range"
        name="num_cards"
        min="5"
        max="15"
        step="5"
        value={formData.num_cards}
        onChange={handleChange}
        className="range range-sm range-blue-100 text-blue-400"
      />
    </div>

    {/* –§–æ—Ä–º–∞—Ç */}
    <div className="mb-5">
      <label className="block mb-2 font-semibold text-gray-700">–§–æ—Ä–º–∞—Ç –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ</label>
      <select
        name="answer_format"
        value={formData.answer_format}
        onChange={handleChange}
        className="w-full px-4 py-3 rounded-xl bg-base-100 shadow-[inset_2px_2px_8px_#cfe7d6,inset_-2px_-2px_8px_#ffffff] focus:outline-none"
      >
        <option value="description">–û–ø–∏—Å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó</option>
        <option value="instructions">–Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó —Ç–∞ –≤–∫–∞–∑—ñ–≤–∫–∏</option>
        <option value="comparison">–ü–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è —Ç–∞ –∞–Ω–∞–ª—ñ–∑</option>
        <option value="conclusions">–ü—ñ–¥—Å—É–º–∫–∏ —Ç–∞ –≤–∏—Å–Ω–æ–≤–∫–∏</option>
      </select>
    </div>

    {/* –†—ñ–≤–µ–Ω—å –¥–µ—Ç–∞–ª—ñ–∑–∞—Ü—ñ—ó */}
    <div className="mb-5">
      <label className="block mb-2 font-semibold text-gray-700">–†—ñ–≤–µ–Ω—å –¥–µ—Ç–∞–ª—ñ–∑–∞—Ü—ñ—ó</label>
      <div className="flex justify-between gap-2 mt-2">
        {["–°—Ç–∏—Å–ª–∏–π", "–°–µ—Ä–µ–¥–Ω—ñ–π", "–†–æ–∑–≥–æ—Ä–Ω—É—Ç–∏–π"].map((level) => (
          <button
            key={level}
            type="button"
            onClick={() => setFormData((prev) => ({ ...prev, detail_level: level }))}
            className={`p-3 rounded-xl font-semibold text-sm shadow-lg transition-all cursor-pointer ${
              formData.detail_level === level
                ? "bg-blue-400  text-white "
                : "bg-gray-200 text-gray-600 "
            }`}
          >
            {level}
          </button>

        ))}
      </div>
    </div>

    {/* –°—Ç–∏–ª—å –º–æ–≤–ª–µ–Ω–Ω—è */}
    <div className="mb-5">
      <label className="block mb-2 font-semibold text-gray-700">
        –°—Ç–∏–ª—å –º–æ–≤–ª–µ–Ω–Ω—è: {speechStyles[formData.text_style]}
      </label>
      <input
        type="range"
        name="text_style"
        min="1"
        max="2"
        step="1"
        value={formData.text_style}
        onChange={handleChange}
        className="range range-sm mt-1 range-blue-100 text-blue-400 font-semibold rounded-xl "
      />
      <div className="flex justify-between text-xs text-gray-400 mt-1">
        <span>–†–æ–∑–º–æ–≤–Ω–∏–π</span>
        <span>–û—Ñ—ñ—Ü—ñ–π–Ω–∏–π</span>
      </div>
    </div>

    {/* –ö–Ω–æ–ø–∫–∞ */}
    <button
      onClick={sendGenData}
       className="w-full px-5 py-2 bg-blue-400 text-white font-semibold rounded-xl hover:brightness-105 cursor-pointer transition"
    >
      –ì–µ–Ω–µ—Ä—É–≤–∞—Ç–∏
    </button>

    {/* –ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ */}
    <SmartCardMaterialPreview
      isOpen={isModalOpen}
      onClose={() => {
        setIsModalOpen(false);
        setModalData(null);
      }}
      initialData={modalData}
      sourceData={source}
    />
  </div>
</motion.div>

  );
}
